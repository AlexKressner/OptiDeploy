name: Continuous Deployment to DigitalOcean

on:
  push:
    branches:
      - master

env:
  PAPERTRAIL_URL: ${{ secrets.PAPERTRAIL_URL }}
  WEB_IMAGE: optideploy_web
  DB_IMAGE: optideploy_db

jobs:

  test:
    uses: ${{ env.GITHUB_REPOSITORY }}/.github/workflows/CI.yml@master

  build:
    name: Build and Push Images
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout master
        uses: actions/checkout@v2
      - name: Get date
        run: |
          echo "DATE=$(date '+%Y-%m-%d')" >> $GITHUB_ENV
      - name: Build images
        run: |
          docker build -t ${{ secrets.DOCKERHUB_NAMESPACE }}/$WEB_IMAGE:$DATE -f ./project/Dockerfile ./project
          docker build -t ${{ secrets.DOCKERHUB_NAMESPACE }}/$DB_IMAGE:$DATE -f ./project/db/Dockerfile ./project/db
      - name: Log in to Dockerhub
        run: echo ${{ secrets.DOCKERHUB_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_NAMESPACE }} --password-stdin
      - name: Push to Dockerhub
        run: |
          docker push ${{ secrets.DOCKERHUB_NAMESPACE }}/$WEB_IMAGE:$DATE
          docker push ${{ secrets.DOCKERHUB_NAMESPACE }}/$DB_IMAGE:$DATE 

  deploy:
    name: Deploy to DigitalOcean
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.ref == 'refs/heads/master' 
    steps:
      - name: Checkout master
        uses: actions/checkout@v2
      - name: Get date
        run: |
          echo "DATE=$(date '+%Y-%m-%d')" >> $GITHUB_ENV
      - name: Copy .env and stack to manager node via scp
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_IPV4 }}
          username: root
          key: ${{ secrets.PRIVATE_KEY }}
          source: "./.env, ./docker-compose-swarm.yml"
          target: "~"
      - name: Update the stack on manager node via ssh
        uses: appleboy/ssh-action@master
        env:
          WEB_IMAGE: ${{ secrets.DOCKERHUB_NAMESPACE }}/${{ env.WEB_IMAGE }}:${{ env.DATE }}
          DB_IMAGE: ${{ secrets.DOCKERHUB_NAMESPACE }}/${{ env.DB_IMAGE }}:${{ env.DATE }}
        with:
          host: ${{ secrets.SERVER_IPV4 }}
          username: root
          key: ${{ secrets.PRIVATE_KEY }}
          envs: PAPERTRAIL_URL, WEB_IMAGE, DB_IMAGE
          script: |
            export PAPERTRAIL_URL=$PAPERTRAIL_URL
            export WEB_IMAGE=$WEB_IMAGE
            export DB_IMAGE=$DB_IMAGE
            echo ${{ secrets.DOCKERHUB_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_NAMESPACE }} --password-stdin
            docker pull $WEB_IMAGE
            docker pull $DB_IMAGE
            docker stack deploy --compose-file=docker-compose-swarm.yml optideploy